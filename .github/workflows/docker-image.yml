name: CDN_bestIP docker image

on:
  release:
    types: [ published ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: actions/setup-go@v5
        with:
          go-version: '>=1.22.0'
          cache: false

      - name: build
        working-directory: ./CloudflareSpeedTest
        run: |
          go mod tidy
          go build -o ../CloudflareST_linux_amd64/CloudflareST -ldflags "-s -w"
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0

      - name : prepare maxmind
        run: |
          rm -rf GeoLite2-Country.mmdb

      - name : download maxmind
        uses: yortyrh/geoipupdate-action@v4
        with:
          account-id: ${{ secrets.GEOIPUPDATE_ACCOUNT_ID }}
          license-key: ${{ secrets.GEOIPUPDATE_LICENSE_KEY }}
          edition-ids: 'GeoLite2-Country'
          db-path: './utils/'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=pep440,pattern={{raw}},enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}